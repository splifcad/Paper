From 585ab1295463023ffa92fd3f3dd128634f1d7a5c Mon Sep 17 00:00:00 2001
From: Zach Brown <zach.brown@destroystokyo.com>
Date: Fri, 22 Apr 2016 18:20:05 -0500
Subject: [PATCH] Vehicle Event Cancellation Changes


diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index a00baa6..804b345 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -1651,6 +1651,10 @@ public abstract class Entity implements ICommandListener {
     }
 
     public boolean a(Entity entity, boolean flag) {
+        return this.a(entity, flag, false); // Paper
+    }
+
+    public boolean a(Entity entity, boolean flag, boolean suppressEvents) { // Paper - Add suppress
         if (!flag && (!this.n(entity) || !entity.q(this))) {
             return false;
         } else {
@@ -1659,7 +1663,7 @@ public abstract class Entity implements ICommandListener {
             }
 
             this.as = entity;
-            this.as.o(this);
+            this.as.addRider(this, suppressEvents); // Paper
             return true;
         }
     }
@@ -1686,12 +1690,20 @@ public abstract class Entity implements ICommandListener {
     }
 
     protected void o(Entity entity) {
+        // Paper start - Forward
+        this.addRider(entity, false);
+    }
+
+    private void addRider(Entity entity, boolean suppressEvents) {
+        // Paper end
         if (entity.by() != this) {
             throw new IllegalStateException("Use x.startRiding(y), not y.addPassenger(x)");
         } else {
             // CraftBukkit start
             com.google.common.base.Preconditions.checkState(!entity.passengers.contains(this), "Circular entity riding! %s %s", this, entity);
 
+            if (!suppressEvents) { // Paper - Make event calls suppressible
+            // =============================================================
             CraftEntity craft = (CraftEntity) entity.getBukkitEntity().getVehicle();
             Entity orig = craft == null ? null : craft.getHandle();
             if (getBukkitEntity() instanceof Vehicle && entity.getBukkitEntity() instanceof LivingEntity && entity.world.isChunkLoaded((int) entity.locX >> 4, (int) entity.locZ >> 4, false)) { // Boolean not used
@@ -1714,6 +1726,8 @@ public abstract class Entity implements ICommandListener {
                 return;
             }
             // Spigot end
+            // =============================================================
+            } // Paper - end suppressible block
             if (!this.world.isClientSide && entity instanceof EntityHuman && !(this.bt() instanceof EntityHuman)) {
                 this.passengers.add(0, entity);
             } else {
@@ -1739,16 +1753,29 @@ public abstract class Entity implements ICommandListener {
                 CraftEntity craftn = (CraftEntity) entity.getBukkitEntity().getVehicle();
                 Entity n = craftn == null ? null : craftn.getHandle();
                 if (event.isCancelled() || n != orig) {
+                    this.cancelDismount(entity); // Paper
                     return;
                 }
             }
             // CraftBukkit end
-            Bukkit.getPluginManager().callEvent( new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity())); // Spigot
+            // Paper start - make EntityDismountEvent cancellable
+            if (!new org.spigotmc.event.entity.EntityDismountEvent(entity.getBukkitEntity(), this.getBukkitEntity()).callEvent()) {
+                this.cancelDismount(entity);
+                return;
+            }
+            // Paper end
             this.passengers.remove(entity);
             entity.j = 60;
         }
     }
 
+    // Paper start
+    private void cancelDismount(Entity dismounter) {
+        this.passengers.remove(dismounter);
+        dismounter.a(this, false, true);
+    }
+    // Paper end
+
     protected boolean q(Entity entity) {
         return this.bu().size() < 1;
     }
-- 
2.5.0

